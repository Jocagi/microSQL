@model microSQL.Models.PalabrasReservadas

@{
    ViewBag.Title = "ConfiguracionDeIdioma";
}

<h2>ConfiguracionDeIdioma</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>PalabrasReservadas</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.SELECT, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SELECT, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SELECT, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FROM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FROM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FROM, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DELETE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DELETE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DELETE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WHERE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WHERE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WHERE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CREATE_TABLE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CREATE_TABLE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CREATE_TABLE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DROP_TABLE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DROP_TABLE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DROP_TABLE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.INSERT_INTO, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.INSERT_INTO, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.INSERT_INTO, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VALUES, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VALUES, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VALUES, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GO, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GO, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GO, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UPDATE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UPDATE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UPDATE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-default" />
        </div>


        <input type="button"
               value="Cambiar a Default"
               onclick="location.href= '@Url.Action("ConfiguracionDefault", "Home" )'" %>
    </div>

</div>
}

<div>
    @Html.ActionLink("Regresar", "Index")
</div>
